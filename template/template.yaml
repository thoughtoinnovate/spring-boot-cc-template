apiVersion: backstage.io/v1alpha1
kind: Template
metadata:
  name: create-spring-boot-app-template
  title: Create Spring Boot App Template
  description: Create a new spring boot project
  tags:
    - spring
    - springboot
    - cookiecutter
spec:
  owner: web@example.com
  templater: cookiecutter
  type: website
  path: '.'

  schema:
    required:
      - component_id
      - base_package
      - description
      - collaborators
    properties:
      component_id:
        title: Name
        type: string
        pattern: ^[a-z0-9]+(-[a-z0-9]+)*$
        description: Unique name of the component. Lowercase, URL-safe characters only.
      base_package:
        title: Name
        type: string
        pattern: ^[a-z0-9]+(-[a-z0-9]+)*$
        description: base package of your app
      description:
        title: Description
        type: string
        description: Help others understand what this website is for.
      use_typescript:
        title:  Use TypeScript
        type: boolean
        description: Include TypeScript
        default: true
      use_github_actions:
        title:  Use Github Actions workflows to build this component
        type: boolean
        description: Use Github Actions
        default: true
      collaborators:
        title: Collaborators
        description: Provide users with permissions
        type: array
        ui:options:
          orderable: false
        items:
          type: object
          required:
          - username
          - access
          properties:
            access:
              type: string
              description: The type of access for the user
              default: pull
              enum:
              - push
              - pull
              - admin
              - maintain
              - triage
            username:
              type: string
              description: The username or group
# here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:cookiecutter
      input:
        url: https://github.com/thoughtoinnovate/spring-boot-cc-template
        values:
          name: '{{ parameters.name }}'
          owner: '{{ parameters.owner }}'

    - id: fetch-docs
      name: Fetch Docs
      action: fetch:plain
      input:
        targetPath: ./community
        url: https://github.com/backstage/community/tree/main/backstage-community-sessions

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: 'This is {{ parameters.name }}'
        repoUrl: '{{ parameters.repoUrl }}'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: '{{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  output:
    remoteUrl: '{{ steps.publish.output.remoteUrl }}'
    entityRef: '{{ steps.register.output.entityRef }}'
